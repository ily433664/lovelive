<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lovelive.user.dao.IUserDao">
    <!-- User -->
    <resultMap id="BaseResultMap" type="com.lovelive.user.entity.User">
        <id column="u_id" property="id" jdbcType="INTEGER"/>
        <result column="account" property="account" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!-- User by Role by Perm -->
    <resultMap id="RoleBaseResultMap" type="com.lovelive.user.entity.User">
        <id column="u_id" property="id" jdbcType="INTEGER"/>
        <result column="account" property="account" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP"/>
        <!-- UserRole -->
        <collection property="userRoles" ofType="com.lovelive.user.entity.UserRole">
            <id column="ur_id" property="id" jdbcType="INTEGER"/>
            <result column="status" property="status" jdbcType="INTEGER"/>
            <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
            <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
            <!-- Role -->
            <association property="role" javaType="com.lovelive.user.entity.Role">
                <id column="r_id" property="id" jdbcType="INTEGER"/>
                <id column="r_name" property="name" jdbcType="VARCHAR"/>
                <id column="r_code" property="code" jdbcType="VARCHAR"/>
                <result column="status" property="status" jdbcType="INTEGER"/>
                <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
                <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
                <!-- RolePerm -->
                <collection property="rolePerms" ofType="com.lovelive.user.entity.RolePerm">
                    <id column="rp_id" property="id" jdbcType="INTEGER"/>
                    <result column="status" property="status" jdbcType="INTEGER"/>
                    <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
                    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
                    <!-- Perm -->
                    <association property="perm" javaType="com.lovelive.user.entity.Perm">
                        <id column="p_id" property="id" jdbcType="INTEGER"/>
                        <id column="p_name" property="name" jdbcType="VARCHAR"/>
                        <result column="status" property="status" jdbcType="INTEGER"/>
                        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
                        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
                    </association>
                </collection>
            </association>
        </collection>
    </resultMap>

    <!-- 查询UserRole -->
    <select id="getUserRoleByAccount" resultMap="RoleBaseResultMap" parameterType="java.lang.String">
		select u.u_id, u.account, u.password, u.user_name, u.status, u.create_time, u.update_time, u.last_login_time, 
			ur.ur_id, ur.status, ur.create_time, ur.update_time, 
			r.r_id, r.r_name, r.r_code, r.status, r.create_time, r.update_time, 
			rp.rp_id, rp.r_id, rp.p_id, rp.status, rp.create_time, rp.update_time, 
			p.p_id, p.p_name, p.status, p.create_time, p.update_time
		from user_t u 
			left join user_role_t ur on u.u_id=ur.u_id 
			left join role_t r on ur.r_id=r.r_id 
			left join role_perm_t rp on r.r_id=rp.r_id 
			left join perm_t p on rp.p_id=p.p_id
		where u.account = #{account, jdbcType=VARCHAR}
	</select>

    <!-- 查询账号是否有这个账号-->
    <select id="existedAccount" resultType="java.lang.Object" parameterType="java.util.Map">
		select 1 
		from user_t u 
		where u.account = #{account, jdbcType=VARCHAR}
	</select>

    <!-- 查询账号是否有这个用户名称 -->
    <select id="existedUserName" resultType="java.lang.Object" parameterType="java.util.Map">
		select 1 
		from user_t u 
		where u.user_name = #{userName, jdbcType=VARCHAR}
	</select>

    <!-- 查询账号是否有这个角色 -->
    <select id="existedAccountRole" resultType="java.lang.Object" parameterType="java.util.Map">
		select 1 
		from user_t u left join user_role_t ur on u.u_id=ur.u_id left join role_t r on ur.r_id=r.r_id
		where u.account = #{account, jdbcType=VARCHAR} and r.r_code = #{roleCode, jdbcType=VARCHAR}
	</select>

    <!-- 字段 -->
    <sql id="Base_Column_List">
		u_id, account, password, user_name, status, create_time, update_time, last_login_time
	</sql>

    <!-- 表名 -->
    <sql id="Talbe_name">
		user_t
	</sql>

    <!-- 根据id查询 -->
    <select id="getUserById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Talbe_name"/>
        where u_id = #{id, jdbcType=INTEGER}
    </select>

    <!-- 根据account查询 -->
    <select id="getUserByAccount" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Talbe_name"/>
        where account = #{account, jdbcType=VARCHAR}
    </select>

    <!-- 根据userName查询 -->
    <select id="getUserByUserName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Talbe_name"/>
        where user_name = #{userName, jdbcType=VARCHAR}
    </select>

    <!-- 根据id删除 -->
    <delete id="deleteUserById" parameterType="java.lang.Integer">
        delete from
        <include refid="Talbe_name"/>
        where u_id = #{id,jdbcType=INTEGER}
    </delete>

    <!-- 根据account删除 -->
    <delete id="deleteUserByAccount" parameterType="java.lang.String">
        delete from
        <include refid="Talbe_name"/>
        where account = #{account,jdbcType=VARCHAR}
    </delete>

    <!-- 插入 -->
    <insert id="insertUser" parameterType="com.lovelive.user.entity.User">
        insert into
        <include refid="Talbe_name"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="account != null">
                account,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="lastLoginTime != null">
                last_login_time,
            </if>
        </trim>

        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="account != null">
                #{account,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="lastLoginTime != null">
                #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <!-- 根据id更新 -->
    <update id="updateUserById" parameterType="com.lovelive.user.entity.User">
        update
        <include refid="Talbe_name"/>
        <set>
            <if test="account != null">
                account = #{account,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="lastLoginTime != null">
                last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where u_id = #{id,jdbcType=INTEGER}
    </update>

    <!-- 根据account更新 -->
    <update id="updateUserByAccount" parameterType="com.lovelive.user.entity.User">
        update
        <include refid="Talbe_name"/>
        <set>
            <if test="account != null">
                account = #{account,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="lastLoginTime != null">
                last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where account = #{account,jdbcType=VARCHAR}
    </update>
</mapper>